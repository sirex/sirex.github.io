<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sirex web log (Posts about testing)</title><link>https://sirex.lt/</link><description></description><atom:link href="https://sirex.lt/tags/testing.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2022 &lt;a href="mailto:sirexas@gmail.com"&gt;Sirex&lt;/a&gt; </copyright><lastBuildDate>Sun, 06 Mar 2022 07:59:12 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Test one thing in one test function</title><link>https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/</link><dc:creator>Sirex</dc:creator><description>&lt;p&gt;When writing tests, we usually want to test multiple things in one test
function. We do that, because this way we need to write less. For example:&lt;/p&gt;
&lt;!-- run: env/bin/py.test -vvx - -color=yes %s --&gt;
&lt;pre class="code python"&gt;&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-1" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-1" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-1"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pytest&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-2" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-2" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-2"&gt;&lt;/a&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sqlite3&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-3" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-3" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-3"&gt;&lt;/a&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-4" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-4" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-4"&gt;&lt;/a&gt;&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fixture&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-5" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-5" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;db&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-6" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-6" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;conn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sqlite3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;':memory:'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-7" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-7" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-7"&gt;&lt;/a&gt;    &lt;span class="n"&gt;conn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'CREATE TABLE t (key TEXT, val TEXT)'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-8" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-8" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;conn&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-9" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-9" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-9"&gt;&lt;/a&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-10" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-10" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-10"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_sqlite&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-11" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-11" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-11"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# setup&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-12" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-12" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'INSERT INTO t (key, val) VALUES ("foo", "bar")'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-13" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-13" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-13"&gt;&lt;/a&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-14" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-14" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-14"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# test 1&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-15" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-15" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SELECT * FROM t;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-16" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-16" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-16"&gt;&lt;/a&gt;    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-17" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-17" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-17"&gt;&lt;/a&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-18" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-18" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-18"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# test ...&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-19" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-19" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-19"&gt;&lt;/a&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-20" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-20" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-20"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;# test N&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-21" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-21" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-21"&gt;&lt;/a&gt;    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SELECT * FROM t WHERE key = "foo";'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_d6c3c349118841df8de6852f7d8d2bac-22" name="rest_code_d6c3c349118841df8de6852f7d8d2bac-22" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_d6c3c349118841df8de6852f7d8d2bac-22"&gt;&lt;/a&gt;    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Here we have a test, where two separate things are tested. It is convenient to
write tests this way, because we only need to do setup once and then test
multiple things on the same setup.&lt;/p&gt;
&lt;p&gt;Lets assume, that we wrote &lt;code class="docutils literal"&gt;sqlite3&lt;/code&gt; module our tests fail at &lt;code class="docutils literal"&gt;test N&lt;/code&gt; step. We
need to debug what is going one. Usually debuggin requires to hook into for
example &lt;code class="docutils literal"&gt;db.execute&lt;/code&gt; and print some things or run a debugger like &lt;a class="reference external" href="https://docs.python.org/3/library/pdb.html"&gt;pdb&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since failure is only happens on last &lt;code class="docutils literal"&gt;test N&lt;/code&gt; step, &lt;code class="docutils literal"&gt;db.execute&lt;/code&gt; debugging
becomse quite complicated, because in this one test we run &lt;code class="docutils literal"&gt;db.execute&lt;/code&gt;
multiple times. That means, we will see too much irrelevant output, which makes
it difficult to see only relevate output from our last &lt;code class="docutils literal"&gt;test N&lt;/code&gt; step.&lt;/p&gt;
&lt;p&gt;Usually I end up splitting such tests into many separate tests in order to make
debugging easier. For example, this test above could be split like this:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a id="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-1" name="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-1" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_6ee4f4d1610b4518b712d4ef43624dc1-1"&gt;&lt;/a&gt;&lt;span class="nd"&gt;@pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fixture&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a id="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-2" name="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-2" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_6ee4f4d1610b4518b712d4ef43624dc1-2"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-3" name="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-3" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_6ee4f4d1610b4518b712d4ef43624dc1-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'INSERT INTO t (key, val) VALUES ("foo", "bar")'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-4" name="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-4" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_6ee4f4d1610b4518b712d4ef43624dc1-4"&gt;&lt;/a&gt;
&lt;a id="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-5" name="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-5" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_6ee4f4d1610b4518b712d4ef43624dc1-5"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_sqlite_1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-6" name="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-6" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_6ee4f4d1610b4518b712d4ef43624dc1-6"&gt;&lt;/a&gt;    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SELECT * FROM t;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-7" name="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-7" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_6ee4f4d1610b4518b712d4ef43624dc1-7"&gt;&lt;/a&gt;    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;a id="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-8" name="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-8" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_6ee4f4d1610b4518b712d4ef43624dc1-8"&gt;&lt;/a&gt;
&lt;a id="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-9" name="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-9" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_6ee4f4d1610b4518b712d4ef43624dc1-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_sqlite_N&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a id="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-10" name="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-10" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_6ee4f4d1610b4518b712d4ef43624dc1-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'SELECT * FROM t WHERE key = "foo";'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a id="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-11" name="rest_code_6ee4f4d1610b4518b712d4ef43624dc1-11" href="https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/#rest_code_6ee4f4d1610b4518b712d4ef43624dc1-11"&gt;&lt;/a&gt;    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;'foo'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'bar'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Now that is much better. I can run just &lt;code class="docutils literal"&gt;test_sqlite_N&lt;/code&gt; and when debuggin, I
will see only relevant output.&lt;/p&gt;</description><category>python</category><category>testing</category><guid>https://sirex.lt/posts/2019/test-one-thing-in-one-test-function/</guid><pubDate>Thu, 02 Jan 2020 11:53:26 GMT</pubDate></item></channel></rss>